prior sunniness = skew_normal(0.1, 0.2, 0.9).clamp(0.0, 1.0);

// independent events can be provided as bernoulli variables
prior my_daily_coinflip = bernoulli(0.5);

// or using this shorthand
P[finding_peace] = 0.2;

// or, can be specified directly as a posterior
P[finding_peace | sunniness > 0.5] = 0.6;

// declare the likelihood of "no rain" inside the disjunction "rain_intensity"
// likelihoods don't need to sum to 1.0. they are normalized
L[rain_intensity->no_rain] = 0.2
L[rain_intensity->light_rain] = 0.2
L[rain_intensity->moderate_rain] = 0.2
L[rain_intensity->heavy_rain] = 0.2
L[rain_intensity->end_times] = 0.02

// likelihoods can also be conditional
L[sunny_day->sunny | light_rain] = 0.6;
L[sunny_day->not_sunny | light_rain] = 0.4;


// without providing a scenario, a variable is a prior distribution
prior inches_rain = skew_normal(0.0, 0.1, 10.0);

// however if conditioning variables are provided, they will take precedence
E[inches_rain | light_rain] = uniform(0.0, 0.5);

// a conditional expectation can be estimated several ways. a single estimator will be
// selected at random in the case that several matching conditions are met
E[inches_rain | light_rain] = (1.0 - sunniness) * 1.0;

// alternately, an explicit weight can be given to make a given estimator more
// or less likely to be selected in the case that several conditions match
E[inches_rain | light_rain] @ 0.5 = (1.0 - sunniness) * 1.0;
E[inches_rain | light_rain] @ 0.05 = 0.7;

// the weight can also be a variable
E[inches_rain | light_rain] @ 1 - sunniness = 0.9;
